{"version":3,"sources":["components/layout/SigninLinks.js","redux/actions/authAction.js","components/layout/SignoutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashbord.js","components/projects/ProjectDetails.js","components/auth/Login.js","components/auth/Signup.js","components/projects/CreateProject.js","redux/actions/projectAction.js","App.js","serviceWorker.js","redux/reducers/authReducer.js","redux/reducers/projectReducer.js","redux/reducers/rootReducer.js","config/fbConfig.js","redux/store/index.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","err","props","id","className","to","onClick","profile","initials","SignoutLinks","state","firebase","links","uid","Notification","notifications","map","item","key","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createAt","calendar","ProjectList","projects","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","Login","email","password","handleChange","bind","handleSubmit","e","target","this","setState","value","preventDefault","signIn","authError","onSubmit","onChange","htmlFor","Component","cred","credentials","signInWithEmailAndPassword","initialState","firstName","lastName","Signup","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","toUpperCase","console","log","CreateProject","createProject","history","push","add","authorId","Date","App","path","exact","component","Dashboard","ProjectDetails","Boolean","window","location","hostname","authReducer","action","projectReducer","Object","assign","concat","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"iRAIA,IAqBeA,cAAQ,MALI,SAACC,GACxB,MAAO,CACHC,QAAS,kBAAMD,GCTZ,SAACA,EAAUE,EAAX,IACcC,EAD2B,EAAlBA,eAEjBC,OAAOH,UAAUI,MAAK,WAC3BL,EAAS,CAAEM,KAAM,uBAClBC,OAAM,SAACC,GACNR,EAAS,CAAEM,KAAM,gBAAiBE,kBDO/BT,EArBK,SAACU,GACjB,OACI,wBAAIC,GAAG,aAAaC,UAAU,8BAE1B,4BACI,kBAAC,IAAD,CAASC,GAAG,eAAZ,gBAEJ,4BACI,kBAAC,IAAD,CAASA,GAAG,IAAIC,QAASJ,EAAMR,SAA/B,YAEJ,4BACI,kBAAC,IAAD,CAASW,GAAG,IAAID,UAAU,0BAA0BF,EAAMK,QAAQC,eECnEC,EAdM,WACjB,OACI,wBAAIN,GAAG,aAAaC,UAAU,8BAE1B,4BACI,kBAAC,IAAD,CAASC,GAAG,WAAZ,WAEJ,4BACI,kBAAC,IAAD,CAASA,GAAG,UAAZ,YCiBDb,eAPS,SAACkB,GACrB,MAAM,CACFb,KAAMa,EAAMC,SAASd,KACrBU,QAAUG,EAAMC,SAASJ,WAIlBf,EArBA,SAAC,GAAqB,IAApBK,EAAmB,EAAnBA,KAAMU,EAAa,EAAbA,QACbK,EAAQf,EAAKgB,IAAO,kBAAC,EAAD,CAAaN,QAASA,IAAa,kBAAC,EAAD,MACzD,OACI,yBAAKH,UAAU,wBACX,yBAAKA,UAAU,aAEX,yBAAKA,UAAU,gBACX,kBAAC,IAAD,CAAMC,GAAG,KAAT,oBACCO,Q,iBCgBVE,EA5BM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACpB,OACI,yBAAKX,UAAU,wBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAhB,gBAGA,wBAAIA,UAAU,gBACTW,GAAiBA,EAAcC,KAAI,SAACC,GACjC,OACI,wBAAIC,IAAKD,EAAKd,IACV,0BAAMC,UAAU,aAAhB,IAA8Ba,EAAKE,KAAnC,KACA,kCAASF,EAAKG,QAAd,KACA,yBAAKhB,UAAU,uBACViB,IAAOJ,EAAKK,KAAKC,UAAUC,oBCDrDC,EAdQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAEI,yBAAKtB,UAAU,wBACX,yBAAKA,UAAU,wCACX,0BAAMA,UAAU,cAAcsB,EAAQC,OACtC,wCAAcD,EAAQE,gBAAtB,IAAwCF,EAAQG,eAAhD,KACZ,uBAAGzB,UAAU,aAAb,QAA+BiB,IAAOK,EAAQI,SAASP,UAAUQ,eCWtDC,EAjBK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OACI,yBAAK7B,UAAU,gBACV6B,GAAYA,EAASjB,KAAI,SAAAU,GAEtB,OACI,kBAAC,IAAD,CAAMrB,GAAI,YAAcqB,EAAQvB,GAAIe,IAAKQ,EAAQvB,IAC7C,kBAAC,EAAD,CAAgBuB,QAASA,U,gBCwBlCQ,cACX1C,aAToB,SAACkB,GACrB,MAAO,CACHuB,SAAUvB,EAAMyB,UAAUC,QAAQH,SAClCpC,KAAMa,EAAMC,SAASd,KACrBkB,cAAeL,EAAMyB,UAAUC,QAAQrB,kBAM3CsB,2BAAiB,CACb,CAAEC,WAAY,WAAaC,QAAQ,CAAC,WAAY,SAChD,CAAED,WAAY,gBAAiBE,MAAO,EAAED,QAAQ,CAAC,OAAQ,WAJlDL,EA3BG,SAAC,GAAuC,IAArCD,EAAoC,EAApCA,SAAUpC,EAA0B,EAA1BA,KAAMkB,EAAoB,EAApBA,cACjC,OAAKlB,EAAKgB,IAEN,yBAAKT,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAa6B,SAAUA,KAE3B,yBAAK7B,UAAU,wBACX,kBAAC,EAAD,CAAcW,cAAeA,QAT3B,kBAAC,IAAD,CAAUV,GAAG,cCoCxB6B,cACX1C,aAXoB,SAACkB,EAAO+B,GAC5B,IAAMtC,EAAKsC,EAASC,MAAMC,OAAOxC,GAC3B8B,EAAWvB,EAAMyB,UAAUS,KAAKX,SAEtC,MAAO,CACFP,QAFWO,EAAWA,EAAS9B,GAAM,KAGrCN,KAAMa,EAAMC,SAASd,SAKCwC,2BAAiB,CACxC,CAAEC,WAAY,cAFPJ,EAtCQ,SAAC,GAAqB,IAApBR,EAAmB,EAAnBA,QACrB,OADwC,EAAV7B,KACpBgB,IACNa,EAEI,yBAAKtB,UAAU,kBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,wCACX,0BAAMA,UAAU,cAAcsB,EAAQC,MAAtC,KACA,2BAAID,EAAQN,UAGhB,yBAAKhB,UAAU,eAC/B,uBAAGA,UAAU,aAAb,aAAoCsB,EAAQE,gBAA5C,IAA8DF,EAAQG,gBAClD,uBAAGzB,UAAU,aAAaiB,IAAOK,EAAQI,SAASP,UAAUQ,gBAQ5E,yBAAK3B,UAAU,oBACX,kDAtBU,kBAAC,IAAD,CAAUC,GAAG,c,gDCFjCwC,E,kDACF,WAAY3C,GAAQ,IAAD,8BACf,cAAMA,IACDQ,MAAQ,CACToC,MAAO,GACPC,SAAU,IAEd,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPL,E,yDASNE,GACT,IAAMC,EAASD,EAAEC,OACjBC,KAAKC,SAAL,eACKF,EAAOjD,GAAKiD,EAAOG,U,mCAGfJ,GACTA,EAAEK,iBACFH,KAAKnD,MAAMuD,OAAOJ,KAAK3C,OACvB2C,KAAKC,SAAS,CACVR,MAAO,GACPC,SAAU,O,+BAIR,IAAD,EACuBM,KAAK3C,MAAzBoC,EADH,EACGA,MAAOC,EADV,EACUA,SADV,EAEuBM,KAAKnD,MAAzBwD,EAFH,EAEGA,UACR,GAHK,EAEc7D,KACVgB,IAAK,OAAO,kBAAC,IAAD,CAAUR,GAAG,MACd,IACpB,OACI,yBAAKD,UAAU,SACX,yBAAKA,UAAU,aACX,0BAAMA,UAAU,mBAAmBuD,SAAUN,KAAKH,cAC9C,qCACA,yBAAK9C,UAAU,gBACX,2BAAOD,GAAG,QAAQJ,KAAK,QAAQK,UAAU,WAAWwD,SAAUP,KAAKL,aAAcO,MAAOT,IACxF,2BAAOe,QAAQ,SAAf,UAEJ,yBAAKzD,UAAU,gBACX,2BAAOyD,QAAQ,YAAf,YACA,2BAAO1D,GAAG,WAAWJ,KAAK,WAAWK,UAAU,WAAWwD,SAAUP,KAAKL,aAAcO,MAAOR,KAGlG,4BAAQhD,KAAK,SAASK,UAAU,gCAAhC,SACCsD,EACA,yBAAKtD,UAAU,mBAAmBsD,EAAlC,KACE,Y,GA/CPI,aAkELtE,eANS,SAACkB,GACrB,MAAO,CACHgD,UAAWhD,EAAMb,KAAK6D,UACtB7D,KAAMa,EAAMC,SAASd,SARF,SAACJ,GACxB,MAAO,CACHgE,OAAQ,SAACM,GAAD,OAAUtE,GR9DHuE,EQ8DmBD,ER7D/B,SAACtE,EAAUE,EAAX,IACcC,EAD2B,EAAlBA,eAEjBC,OAAOoE,2BACZD,EAAYlB,MAAOkB,EAAYjB,UACjCjD,MAAK,WACHL,EAAS,CAAEM,KAAM,qBAClBC,OAAM,SAACC,GACNR,EAAS,CAAEM,KAAM,cAAeE,cARrC,IAAgB+D,MQuERxE,CAA6CqD,GCnEtDqB,EAAe,CACjBpB,MAAO,GACPC,SAAU,GACVoB,UAAW,GACXC,SAAU,IAERC,E,kDACF,WAAYnE,GAAQ,IAAD,8BACf,cAAMA,IACDQ,MAAQwD,EACb,EAAKlB,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJL,E,yDAMNE,GACT,IAAMC,EAASD,EAAEC,OACjBC,KAAKC,SAAL,eACKF,EAAOjD,GAAKiD,EAAOG,U,mCAGfJ,GACTA,EAAEK,iBACFH,KAAKnD,MAAMoE,OAAOjB,KAAK3C,OACvB2C,KAAKC,SAASY,K,+BAGR,IAAD,EAC4Cb,KAAK3C,MAA9CoC,EADH,EACGA,MAAOC,EADV,EACUA,SAAUoB,EADpB,EACoBA,UAAWC,EAD/B,EAC+BA,SAD/B,EAEuBf,KAAKnD,MAAzBL,EAFH,EAEGA,KAAM6D,EAFT,EAESA,UACd,OAAI7D,EAAKgB,IAAY,kBAAC,IAAD,CAAUR,GAAG,MAG9B,yBAAKD,UAAU,WACX,yBAAKA,UAAU,aAEX,0BAAMA,UAAU,oBAAoBuD,SAAUN,KAAKH,cAC/C,uCACA,yBAAK9C,UAAU,eACX,2BAAOyD,QAAQ,aAAf,cACA,2BAAO1D,GAAG,YAAYJ,KAAK,OAAOK,UAAU,WAAWwD,SAAUP,KAAKL,aAAcO,MAAOY,KAG/F,yBAAK/D,UAAU,gBACX,2BAAOyD,QAAQ,YAAf,aACA,2BAAO1D,GAAG,WAAWJ,KAAK,OAAOK,UAAU,WAAWwD,SAAUP,KAAKL,aAAcO,MAAOa,KAG9F,yBAAKhE,UAAU,gBACX,2BAAOD,GAAG,QAAQJ,KAAK,QAAQK,UAAU,WAAWwD,SAAUP,KAAKL,aAAcO,MAAOT,IACxF,2BAAOe,QAAQ,SAAf,UAEJ,yBAAKzD,UAAU,gBACX,2BAAOyD,QAAQ,YAAf,YACA,2BAAO1D,GAAG,WAAWJ,KAAK,WAAWK,UAAU,WAAWwD,SAAUP,KAAKL,aAAcO,MAAOR,KAIlG,4BAAQhD,KAAK,SAASK,UAAU,gCAAhC,WACA,yBAAKA,UAAU,+BAA+BsD,GAAwB,a,GAnDzEI,aAqENtE,eAXS,SAACkB,GACrB,MAAO,CACHb,KAAMa,EAAMC,SAASd,KACrB6D,UAAWhD,EAAMb,KAAK6D,cAGH,SAACjE,GACxB,MAAO,CACH6E,OAAQ,SAACC,GAAD,OAAa9E,ETtDtB,SAAiB8E,GACpB,OAAO,SAAC9E,EAAUE,EAAX,GAAqD,IAAhCC,EAA+B,EAA/BA,YAAa4E,EAAkB,EAAlBA,aAC/B7D,EAAUf,IACVuC,EAAWqC,IACjB7D,EAASd,OAAO4E,+BACZF,EAAQzB,MACRyB,EAAQxB,UACVjD,MAAK,SAAC4E,GACL,OAAOvC,EAAUG,WAAW,SAASqC,IAAID,EAAIvD,KAAKN,KAAK+D,IAAI,CACtDT,UAAWI,EAAQJ,UACnBC,SAAUG,EAAQH,SAClB5D,SAAU+D,EAAQJ,UAAU,GAAGU,cAAgB,IAAMN,EAAQH,SAAS,GAAGS,gBAC1E/E,MAAK,WACJL,EAAS,CAAEM,KAAM,sBAClBC,OAAM,SAACC,GACN6E,QAAQC,IAAI9E,GACZR,EAAS,CAACM,KAAK,eAAgBE,IAAIA,WSsCbqE,CAAOC,QAG9B/E,CAA6C6E,G,QC1E5D,IAUMW,E,kDACF,WAAY9E,GAAQ,IAAD,8BACf,cAAMA,IACDQ,MAAQ,CACTiB,MAAO,GACPP,QAAS,IAEb,EAAK4B,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPL,E,yDASNE,GACT,IAAMC,EAASD,EAAEC,OACjBC,KAAKC,SAAL,eACKF,EAAOjD,GAAKiD,EAAOG,U,mCAGfJ,GACTA,EAAEK,iBACFH,KAAKnD,MAAM+E,cAAc5B,KAAK3C,OAC9B2C,KAAKC,SAAS,CACV3B,MAAO,GACPP,QAAS,KAEbiC,KAAKnD,MAAMgF,QAAQC,KAAK,O,+BAElB,IAAD,EACsB9B,KAAK3C,MAAxBiB,EADH,EACGA,MAAOP,EADV,EACUA,QAEf,OADciC,KAAKnD,MAAZL,KACGgB,IAEN,yBAAKT,UAAU,eACX,yBAAKA,UAAU,aACX,0BAAMA,UAAU,qBAAqBuD,SAAUN,KAAKH,cAChD,+CACA,yBAAK9C,UAAU,gBACX,2BAAOD,GAAG,QAAQJ,KAAK,OAAOK,UAAU,WAAWwD,SAAUP,KAAKL,aAAcO,MAAO5B,IACvF,2BAAOkC,QAAQ,SAAf,SACA,0BAAMzD,UAAU,eAAhB,gBAEJ,yBAAKA,UAAU,gBACX,2BAAOyD,QAAQ,WAAf,WACA,8BAAU1D,GAAG,UAAUC,UAAU,uBAAuBwD,SAAUP,KAAKL,aAAcO,MAAOnC,IAC5F,0BAAMhB,UAAU,eAAhB,gBAGJ,4BAAQL,KAAK,SAASK,UAAU,gCAAhC,kBAjBM,kBAAC,IAAD,CAAUC,GAAG,e,GA5BfyD,aAqDbtE,eA1DS,SAACkB,GACrB,MAAO,CACHb,KAAMa,EAAMC,SAASd,SAPF,SAACJ,GACxB,MAAO,CACHwF,cAAe,SAACvD,GAAD,OAAajC,ECN7B,SAAuBiC,GAC1B,OAAO,SAAUjC,EAAUE,EAApB,GAA6D,EAA7BC,YAA8B,IAAjB4E,EAAgB,EAAhBA,aAC1CjE,EAAUZ,IAAWgB,SAASJ,QAC9BM,EAAMlB,IAAWgB,SAASd,KAAKgB,IACnB2D,IACRlC,WAAW,YAAY8C,IAAjC,2BACO1D,GADP,IAEIE,gBAAiBrB,EAAQ4D,UACzBtC,eAAgBtB,EAAQ6D,SACxBiB,SAAUxE,EACViB,SAAU,IAAIwD,QACfxF,MAAK,WACJL,EAAS,CAAEM,KAAM,iBAAkB2B,QAASA,OAC7C1B,OAAM,SAACC,GACNR,EAAS,CAAEM,KAAM,qBAAsBE,YDRNgF,CAAcvD,QA6D5ClC,CAA6CwF,GE1C7CO,MAjBf,WACE,OACE,kBAAC,IAAD,KACA,yBAAKnF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoF,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,eAAgBE,UAAWE,IACvC,kBAAC,IAAD,CAAOJ,KAAK,SAAUE,UAAW7C,IACjC,kBAAC,IAAD,CAAO2C,KAAK,UAAWE,UAAWrB,IAClC,kBAAC,IAAD,CAAOmB,KAAK,cAAcE,UAAWV,QCPzBa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStD,MACvB,2DCfN,IAAMwB,EAAe,CACjBR,UAAW,MA0CAuC,MAtCf,WAAoD,IAA/BvF,EAA8B,uDAAtBwD,EAAcgC,EAAQ,uCAC/C,OAAQA,EAAOnG,MACX,IAAM,cACF,OAAO,2BACAW,GADP,IAEIgD,UAAU,kBAElB,IAAM,gBACF,OAAO,2BACAhD,GADP,IAEIgD,UAAW,OAEnB,IAAM,gBACF,OAAO,2BACAhD,GADP,IAEIgD,UAAW,sBAEnB,IAAM,kBAEF,OADAoB,QAAQC,IAAI,WACL,2BACArE,GADP,IAEIgD,UAAW,OAEnB,IAAM,iBACF,OAAO,2BACAhD,GADP,IAEIgD,UAAW,OAEnB,IAAM,eACF,OAAO,2BACAhD,GADP,IAEIgD,UAAW,mBAEnB,QACI,OAAOhD,ICzCbwD,EAAe,CACjBjC,SAAU,CAAC,CAAE9B,GAAI,EAAGwB,MAAO,aAAcP,QAAS,+BAClD,CAAEjB,GAAI,EAAGwB,MAAO,aAAcP,QAAS,gCACvC,CAAEjB,GAAI,EAAGwB,MAAO,aAAcP,QAAS,kCAkB5B+E,MAdf,WAAuD,IAA/BzF,EAA8B,uDAAtBwD,EAAcgC,EAAQ,uCAClD,OAAQA,EAAOnG,MACX,IAAM,iBAIF,OAHAqG,OAAOC,OAAO,GAAI3F,EAAO,CACrBuB,SAAUvB,EAAMuB,SAASqE,OAAOJ,EAAOxE,WAEpChB,EACX,IAAM,qBAEF,OADAoE,QAAQC,IAAI,uBAAwBmB,EAAOjG,KACpCS,EACX,QACI,OAAOA,I,QCRJ6F,EANIC,YAAgB,CAC/B3G,KAAMoG,EACNvE,QAAQyE,EACRhE,UAAWsE,mBACX9F,SAAU+F,oB,wCCMZ/F,IAASgG,cAVO,CACdC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,8CAITvG,IAASwB,YAEMxB,QAAf,ECAawG,EAZDC,YAAYb,EACtBrE,YACImF,YAAgBC,IAAMC,kBAAkB,CAAE3H,0BAAa4E,+BACvDgD,6BAAmBC,EAAU,CACzBC,wBAAwB,EACxBC,YAAa,QACbC,mBAAmB,IACvBC,yBAAeJ,KCFvBN,EAAMW,oBAAoBhI,MAAK,WAE7BiI,IAASC,OACP,kBAAC,IAAD,CAAUb,MAAOA,GACb,kBAAC,EAAD,OAIJc,SAASC,eAAe,YNgHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvI,MAAK,SAAAwI,GACJA,EAAaC,gBAEdvI,OAAM,SAAAwI,GACL1D,QAAQ0D,MAAMA,EAAMC,c","file":"static/js/main.f44b2eb2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {signOut} from './../../redux/actions/authAction'\r\nconst SigninLinks = (props) => {\r\n    return (\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n            \r\n            <li>\r\n                <NavLink to=\"/newproject\">New Project</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/\" onClick={props.signOut} >Log Out</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/\" className=\" btn btn-floating pink\">{props.profile.initials}</NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps) (SigninLinks);","export function signIn(credentials) {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email, credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: \"LOGIN_SUCCESS\" })\r\n        }).catch((err) => {\r\n            dispatch({ type: \"LOGIN_ERROR\", err })\r\n        })\r\n    }\r\n}\r\nexport function signOut() {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: \"SIGNOUT_SUCCESS\" })\r\n        }).catch((err) => {\r\n            dispatch({ type: \"SIGNOUT_ERROR\", err })\r\n        })\r\n    }\r\n}\r\nexport function signUp (newUser) {\r\n    return (dispatch, getState,{getFirebase ,getFirestore} ) =>{\r\n        const firebase =getFirebase();\r\n        const firestore =getFirestore()\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res)=>{\r\n           return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0].toUpperCase() + \" \" + newUser.lastName[0].toUpperCase() \r\n            }).then(()=>{\r\n                dispatch({ type: \"SIGNUP_SUCCESS\"})\r\n            }).catch((err)=>{\r\n                console.log(err)\r\n                dispatch({type:\"SIGNUP_ERROR\", err:err})\r\n            })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nconst SignoutLinks = () => {\r\n    return (\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n\r\n            <li>\r\n                <NavLink to=\"/signup\">Signup</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/login\">Login</NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default SignoutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SigninLinks from './SigninLinks';\r\nimport SignoutLinks from './SignoutLinks';\r\n\r\nimport { connect } from 'react-redux';\r\nconst Navbar = ({auth, profile}) => {\r\n    const links =(auth.uid) ? <SigninLinks profile={profile}/> : <SignoutLinks/>\r\n        return (\r\n            <nav className=\"grey darken-3 navbar\">\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"nav-wrapper \">\r\n                        <Link to=\"/\">Project Mangment</Link>\r\n                        {links}                     \r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile : state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps) (Navbar);","import React from 'react';\r\nimport moment from 'moment'\r\nconst Notification = ({ notifications }) => {\r\n    return (\r\n        <div className=\"notification section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">\r\n                        Notification\r\n                    </span>\r\n                    <ul className=\"notification\">\r\n                        {notifications && notifications.map((item) => {\r\n                            return (\r\n                                <li key={item.id} >\r\n                                    <span className=\"pink-text\"> {item.user} </span> \r\n                                    <span > {item.content} </span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport moment from 'moment'\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n\r\n        <div className=\"card project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName} </p>\r\n    <p className=\"grey-text\">from {moment(project.createAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProjectSummary from './ProjectSummary';\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list\">\r\n            {projects && projects.map(project => {\r\n\r\n                return (\r\n                    <Link to={\"/project/\" + project.id} key={project.id}  >\r\n                        <ProjectSummary project={project}/>\r\n                    </Link>\r\n                )\r\n\r\n            })}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;","import React from 'react';\r\nimport Notification from './Notification';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\nconst Dashboard = ({ projects, auth, notifications }) => {\r\n    if (!auth.uid) return <Redirect to='/login'/>\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notification notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' , orderBy:['createAt', 'desc']},\r\n        { collection: 'notifications', limit: 3,orderBy:['time', 'desc']}\r\n    ])\r\n)(Dashboard)","import React from 'react';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment'\r\nconst ProjectDetails = ({project, auth}) => {\r\n    if (!auth.uid) return <Redirect to=\"/login\"/>\r\n    if (project) {\r\n        return (\r\n            <div className=\"project-detail\">\r\n                <div className=\"container\">\r\n                    <div className=\"card z-depth-0\">\r\n                        <div className=\"card-content grey-text text-darken-3\">\r\n                            <span className=\"card-title\">{project.title} </span>\r\n                            <p>{project.content}\r\n          </p>\r\n                        </div>\r\n                        <div className=\"card-action\">\r\n        <p className=\"grey-text\">Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                            <p className=\"grey-text\">{moment(project.createAt.toDate()).calendar()}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n         project: project,\r\n         auth: state.firebase.auth\r\n     }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps), (firestoreConnect([\r\n        { collection: \"projects\" }\r\n    ]))\r\n)(ProjectDetails);","import React, { Component } from 'react';\r\nimport { signIn } from './../../redux/actions/authAction';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleChange(e) {\r\n        const target = e.target\r\n        this.setState({\r\n            [target.id]: target.value\r\n        })\r\n    }\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n        this.setState({\r\n            email: \"\",\r\n            password: ''\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const { email, password } = this.state\r\n        const { authError, auth } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        const signupLink = <Link to=\"/signup\">Sign up</Link>\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"container\">\r\n                    <form className=\"login-form white\" onSubmit={this.handleSubmit}>\r\n                        <h4>Login</h4>\r\n                        <div className=\"input-field \">\r\n                            <input id=\"email\" type=\"email\" className=\"validate\" onChange={this.handleChange} value={email} />\r\n                            <label htmlFor=\"email\">Email</label>\r\n                        </div>\r\n                        <div className=\"input-field \">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input id=\"password\" type=\"password\" className=\"validate\" onChange={this.handleChange} value={password} />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn waves-effect waves-light\">Login</button>\r\n                        {authError ?\r\n                         <div className=\"center red-text\">{authError}`</div> \r\n                         : null}\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (cred) => dispatch(signIn(cred))\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from './../../redux/actions/authAction';\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n}\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initialState\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleChange(e) {\r\n        const target = e.target\r\n        this.setState({\r\n            [target.id]: target.value\r\n        })\r\n    }\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n        this.setState(initialState)\r\n\r\n    }\r\n    render() {\r\n        const { email, password, firstName, lastName } = this.state\r\n        const { auth, authError } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"signup \">\r\n                <div className=\"container\">\r\n\r\n                    <form className=\"signup-form white\" onSubmit={this.handleSubmit}>\r\n                        <h4>Sign Up</h4>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"firstName\">First Name</label>\r\n                            <input id=\"firstName\" type=\"text\" className=\"validate\" onChange={this.handleChange} value={firstName} />\r\n                        </div>\r\n\r\n                        <div className=\"input-field \">\r\n                            <label htmlFor=\"lastName\">Last Name</label>\r\n                            <input id=\"lastName\" type=\"text\" className=\"validate\" onChange={this.handleChange} value={lastName} />\r\n\r\n                        </div>\r\n                        <div className=\"input-field \">\r\n                            <input id=\"email\" type=\"email\" className=\"validate\" onChange={this.handleChange} value={email} />\r\n                            <label htmlFor=\"email\">Email</label>\r\n                        </div>\r\n                        <div className=\"input-field \">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input id=\"password\" type=\"password\" className=\"validate\" onChange={this.handleChange} value={password} />\r\n                        </div>\r\n\r\n\r\n                        <button type=\"submit\" className=\"btn waves-effect waves-light\">Sign Up</button>\r\n                        <div className=\"helper-text center red-text\">{authError ? authError : null}</div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, { Component } from 'react';\r\nimport { createProject } from './../../redux/actions/projectAction';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nclass CreateProject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            content: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleChange(e) {\r\n        const target = e.target\r\n        this.setState({\r\n            [target.id]: target.value\r\n        })\r\n    }\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.createProject(this.state)\r\n        this.setState({\r\n            title: \"\",\r\n            content: \"\"\r\n        })\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        const { title, content } = this.state\r\n        const {auth} =this.props\r\n        if (!auth.uid) return <Redirect to=\"/login\"/>\r\n        return (\r\n            <div className=\"new-project\">\r\n                <div className=\"container\">\r\n                    <form className=\"project-form white\" onSubmit={this.handleSubmit}>\r\n                        <h4>ADD NEW PROJECT</h4>\r\n                        <div className=\"input-field \">\r\n                            <input id=\"title\" type=\"text\" className=\"validate\" onChange={this.handleChange} value={title} />\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <span className=\"helper-text\">Helper text</span>\r\n                        </div>\r\n                        <div className=\"input-field \">\r\n                            <label htmlFor=\"content\">Content</label>\r\n                            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} value={content} />\r\n                            <span className=\"helper-text\">Helper text</span>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn waves-effect waves-light\">Add Project</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);",";\r\nexport function createProject(project) {\r\n    return function (dispatch, getState, { getFirebase, getFirestore }) {\r\n        const profile = getState().firebase.profile;\r\n        const uid = getState().firebase.auth.uid\r\n        const firestore = getFirestore()\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: uid,\r\n            createAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: \"CREATE_PROJECT\", project: project })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERR', err })\r\n        })\r\n    }\r\n\r\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashbord';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport Login from './components/auth/Login';\nimport Signup from './components/auth/Signup';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Navbar/>\n      <Switch>\n        <Route path=\"/\" exact component={Dashboard}/>\n        <Route path=\"/project/:id\"  component={ProjectDetails}/>\n        <Route path=\"/login\"  component={Login}/>\n        <Route path=\"/signup\"  component={Signup}/>\n        <Route path=\"/newproject\" component={CreateProject}/>\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react' \r\nconst initialState = {\r\n    authError: null\r\n\r\n}\r\n\r\nfunction authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case (\"LOGIN_ERROR\"):\r\n            return {\r\n                ...state,\r\n                authError: `Login Failed ` \r\n            };\r\n        case (\"LOGIN_SUCCESS\"):\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case (\"SIGNOUT_ERROR\"):\r\n            return {\r\n                ...state,\r\n                authError: \"There is an Error\"\r\n            };\r\n        case (\"SIGNOUT_SUCCESS\"):\r\n            console.log(\"signout\")\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case (\"SIGNUP_SUCCESS\"):\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case (\"SIGNUP_ERROR\"):\r\n            return {\r\n                ...state,\r\n                authError: \"Sign Up failed\"\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\nexport default authReducer","\r\nconst initialState = {\r\n    projects: [{ id: 1, title: \"title no.1\", content: \"lorem lorem lorem blah blah\" },\r\n    { id: 2, title: \"title no.2\", content: \"lorem lorem lorem blah blah \" },\r\n    { id: 3, title: \"title no.3\", content: \" lorem lorem lorem blah blah\" }\r\n    ]\r\n}\r\n\r\nfunction projectReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case (\"CREATE_PROJECT\"):\r\n            Object.assign({}, state, {\r\n                projects: state.projects.concat(action.project)\r\n            })\r\n            return state;\r\n        case ('CREATE_PROJECT_ERR'):\r\n            console.log(\"ERORR IN ADD PROJECT\", action.err)\r\n            return state;\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default projectReducer","import { combineReducers } from \"redux\";\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\nconst rootReducer =combineReducers({\r\n    auth: authReducer,\r\n    project:projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\nexport default rootReducer","\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n const fbConfig = {\r\n    apiKey: \"AIzaSyDuI6P-022zXO1QHjpz68rmSLB__3mkCDI\",\r\n    authDomain: \"project-mangment-c4cab.firebaseapp.com\",\r\n    databaseURL: \"https://project-mangment-c4cab.firebaseio.com\",\r\n    projectId: \"project-mangment-c4cab\",\r\n    storageBucket: \"project-mangment-c4cab.appspot.com\",\r\n    messagingSenderId: \"259702240996\",\r\n    appId: \"1:259702240996:web:a5d848e858765d9b4c5ef1\"\r\n  };\r\n\r\n  firebase.initializeApp(fbConfig)\r\n  firebase.firestore();\r\n\r\n  export default firebase","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './../reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase';\r\nimport fbConfig from './../../config/fbConfig';\r\nconst store = createStore(rootReducer,\r\n    compose(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n        reactReduxFirebase(fbConfig, {\r\n            useFirestoreForProfile: true,\r\n            userProfile: 'users',\r\n            attachAuthIsReady: true}),\r\n        reduxFirestore(fbConfig) // redux bindings for firestore\r\n    )\r\n);\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'materialize-css/dist/css/materialize.min.css'\nimport 'materialize-css/dist/js/materialize'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/index';\n\n\nstore.firebaseAuthIsReady.then(()=>{\n    \n  ReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    \n    ,\n    document.getElementById('root')\n  );\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}